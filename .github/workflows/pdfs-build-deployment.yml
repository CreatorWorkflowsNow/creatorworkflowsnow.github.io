---
# Build the PDFs after new deployment has been made to gh-pages
# This is because PrinceXML can only scan public pages and not localserver

name: PDFs Build and Deploy

# Controls when the action will run.  
on:
  # Only run after pages-build-deployment is completed. This is the final push to make the site live. 
  workflow_run:
    workflows: ["pages-build-deployment"]
    types:
      - completed

  # Allows you to run the workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  # Give the default GITHUB_TOKEN write permission to commit and push the
  # added or changed files to the repository.
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
# group: "pages"
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  pdfs-build-deployment:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4.0.0

      - name: Install Prince
        run: |
          curl https://www.princexml.com/download/prince-15.1-linux-generic-x86_64.tar.gz -O
          tar zxf prince-15.1-linux-generic-x86_64.tar.gz
          cd prince-15.1-linux-generic-x86_64
          yes "" | sudo ./install.sh

#     - name: Make directories
#       run: |
#         mkdir -p build/labs/collaborate/
#         mkdir -p build/labs/travelrequest/

      - name: Build Collaborate Lab PDF
        run: npx docusaurus-prince-pdf -d './labs/collaborate/downloads' -u 'https://creatorworkflowsnow.github.io/labs/collaborate/get_started/intro/' --output './labs/collaborate/downloads/collaborate-lab.pdf'

      - name: Build Travel Request Lab PDF
        run: npx docusaurus-prince-pdf -d './labs/travelrequest/downloads' -u 'https://creatorworkflowsnow.github.io/labs/travelrequest/introduction/' --output './labs/travelrequest/downloads/travelrequest-lab.pdf'

      - name: Build Dept Services Lab PDF
        run: npx docusaurus-prince-pdf -d './labs/deptsvc/downloads' -u 'https://creatorworkflowsnow.github.io/labs/deptsvc/lab-introduction/' --output './labs/deptsvc/downloads/deptsvc-lab.pdf'

      - name: Build Telework Lab PDF
        run: npx docusaurus-prince-pdf -d './labs/telework-utah/downloads' -u 'https://creatorworkflowsnow.github.io/labs/telework-utah/0.0-introduction/overview' --output './labs/telework-utah/downloads/telework-utah-lab.pdf'

      - name: Create New Branch and Commit PDFs
        run: |
          git config --local user.email "${{ secrets.GIT_USER_EMAIL }}"
          git config --local user.name "${{ secrets.GIT_USER_NAME }}"
          # Get the current date and time
          current_time=$(date +"%Y-%m-%d-%H-%M-%S")
          # Use the current date and time in the branch name
          git checkout -b "new-pdf-branch-$current_time"
          git add ./labs/collaborate/downloads/collaborate-lab.pdf
          git add ./labs/travelrequest/downloads/travelrequest-lab.pdf
          git add ./labs/deptsvc/downloads/deptsvc-lab.pdf
          git add ./labs/telework-utah/downloads/telework-utah-lab.pdf 
          git commit -m "Add generated PDFs"
          git push origin "new-pdf-branch-$current_time"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: source
          # Use the current date and time in the branch name
          branch: "new-pdf-branch-$current_time"
          title: "Add generated PDFs"
          body: "This PR adds the newly generated PDFs."

      - name: Merge Pull Request
        uses: pascalgn/automerge-action@v0.14.2
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

#       - name: Commit and Push PDFs
#         run: |
#           git config --local user.email "${{ secrets.GIT_USER_EMAIL }}"
#           git config --local user.name "${{ secrets.GIT_USER_NAME }}"
#           git add ./labs/collaborate/downloads/collaborate-lab.pdf ./labs/travelrequest/downloads/travelrequest-lab.pdf ./labs/deptsvc/downloads/deptsvc-lab.pdf
#           git commit -m "Add generated PDFs"
#           git push origin gh-pages
#       env:
#         GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}
#         GIT_USER: ${{ secrets.GIT_USER_NAME }}

      # Commit all changed files back to the repository
#     - uses: stefanzweifel/git-auto-commit-action@v4